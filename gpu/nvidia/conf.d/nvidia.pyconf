modules {
  module {
    name = "nvidia"
    language = "python"
  }
}

collection_group {
  collect_every = 10
  time_threshold = 50

  metric {
    name_match = "gpu([\\d]+)_graphics_clock_report"
    name = "\\1_graphics_clock_report"
    title = "\\1 Graphics Clock"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_sm_clock_report"
    name = "\\1_sm_clock_report"
    title = "\\1 SM Clock"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_mem_clock_report"
    name = "\\1_mem_clock_report"
    title = "\\1 Memory Clock"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_temp"
    name = "\\1_temp"
    title = "\\1 Temperature"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_util"
    name = "\\1_util"
    title= "\\1 GPU Utilization"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_mem_util"
    name = "\\1_mem_util"
    title= "\\1 Memory Utilization"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_fb_memory"
    name = "\\1_fb_memory"
    title= "\\1 Frame Buffer Memory Used"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_fan"
    name = "\\1_fan"
    title= "\\1 Fan Speed"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_power_usage_report"
    name = "\\1_power_usage"
    title= "\\1 Power Usage"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_ecc_db_error"
    title= "\\1 Double Bit ECC Errors"
    value_threshold = 1.0
  }
  
  metric {
    name_match = "gpu([\\d]+)_ecc_sb_error"
    title= "\\1 Single Bit ECC Error Count"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_power_violation_report"
    title= "\\1 Power Violation Report"
    value_threshold = 1.0
  }
  
  metric {
    name_match = "gpu([\\d]+)_encoder_util"
    title = "\\1 Encoder Utilization"
    value_threshold = 1.0 
  }

  metric {
    name_match = "gpu([\\d]+)_decoder_util"
    title = "\\1 Decoder Utilization"
    value_threshold = 1.0
  }
  
  metric {
    name_match = "gpu([\\d]+)_bar1_memory"
    title = "\\1 Bar1 Memory"
  }

  metric {
    name_match = "gpu([\\d]+)_bar1_max_memory"
    title = "\\1 Bar1 Total Memory"
  } 
}

collection_group {
  collect_every = 600
  time_threshold = 1200

  metric {
    name_match = "gpu([\\d]+)_ecc_mode"
    name = "\\1_ecc_mode"
    title= "\\1 ECC Mode"
    value_threshold = 1.0
  } 
  metric {
    name = "gpu_use_num"
    title = "GPU Use Count"
  }
}

collection_group {
  collect_once = yes
  time_threshold = 1200

  metric {
    name = "gpu_num"
    title = "GPU Count"
  }

  metric {
    name = "gpu_driver"
    title = "GPU Driver Version"
  }

  metric {
    name_match = "gpu([\\d]+)_type"
    name = "\\1_type"
    title = "\\1 Type"
  }

  metric {
    name_match = "gpu([\\d]+)_uuid"
    name = "\\1_uuid"
    title = "\\1 UUID"
  }

  metric {
    name_match = "gpu([\\d]+)_pci_id"
    name = "\\1_pci_id"
    title = "\\1 PCI ID"
  }

  metric {
    name_match = "gpu([\\d]+)_mem_total"
    name = "\\1_mem_total"
    title = "\\1 Memory Total"
  }

  metric {
    name_match = "gpu([\\d]+)_max_graphics_clock"
    name = "\\1_max_graphics_clock"
    title = "\\1 Max Graphics Clock"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_max_sm_clock"
    name = "\\1_max_sm_clock"
    title = "\\1 Max SM Clock"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_max_mem_clock"
    name = "\\1_max_mem_clock"
    title = "\\1 Max Memory Clock"
    value_threshold = 1.0
  }

  metric {
    name_match = "gpu([\\d]+)_serial"
    name = "\\1_serial"
    title = "\\1 Board Serial Number"
  }
  
  metric {
    name_match = "gpu([\\d]+)_shutdown_temp"
    title = "\\1 Shutdown Temperature"
  }

  metric {
    name_match = "gpu([\\d]+)_slowdown_temp"
    title = "\\1 Slowdown Temperature"
  }
  
   metric {
    name_match = "gpu([\\d]+)_power_man_limit"
    title= "\\1 Power Management Limit"
  } 
}

